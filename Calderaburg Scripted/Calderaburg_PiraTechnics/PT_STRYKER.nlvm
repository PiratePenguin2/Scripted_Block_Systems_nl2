import blockhelper.*;
import com.nolimitscoaster.*;

public class PT_STRYKER extends Script{
    private BlockHelperController blockHelperController;

    public bool onInit(){
        Coaster coaster = sim.getCoasterForEntityId(getParentEntityId());
        blockHelperController = new BlockHelperController(coaster);

        BlockHelper stationBlock = blockHelperController.createStationBlock("Station");

        BlockHelper swingBrakeBlock = blockHelperController.createBrakeBlock("SwingBrake");
        BlockHelper show1Block = blockHelperController.createBrakeBlock("Show1");

        BlockHelper show2Block = blockHelperController.createBrakeBlock("Show2");
        BlockHelper swingLaunchBlock = blockHelperController.createBrakeBlock("SwingLaunch");

        BlockHelper finalBrakeBlock = blockHelperController.createBrakeBlock("FinalBrake");

        //BlockHelper storage1Block = blockHelperController.createStorageBlock("Storage1");
        //BlockHelper storage2Block = blockHelperController.createStorageBlock("Storage2");
        //BlockHelper storage3Block = blockHelperController.createStorageBlock("Storage3");

        SpecialTrack swingBrakeSwitch = coaster.getSpecialTrack("SwingBrakeSwitch");  //Default 1/1
        SpecialTrack swingLaunchSwitch = coaster.getSpecialTrack("SwingLaunchSwitch");    //Default 0/1


    //Station
        stationBlock.setLeaveModeMoveFwd();
        stationBlock.selectFwdConditions();
        stationBlock.addConditionBlockFree(swingBrakeBlock);
        stationBlock.addConditionChangeSwitch(swingBrakeSwitch, 1, true);

    //SwingLaunch
        swingBrakeBlock.setLeaveModeMoveFwd();
        swingBrakeBlock.selectFwdConditions();
        swingBrakeBlock.addConditionBlockFree(show1Block);
        //swingBrakeBlock.addConditionChangeSwitch(swingBrakeSwitch, 0, false);

    //Show1
        show1Block.setLeaveModeMoveFwd();
        show1Block.selectFwdConditions();
        show1Block.addConditionBlockFree(show2Block);

    //Show2
        show2Block.setLeaveModeMoveFwd();
        show2Block.selectFwdConditions();
        show2Block.addConditionBlockFree(swingLaunchBlock);
        show2Block.addConditionChangeSwitch(swingLaunchSwitch, 0, true);

    //SwingLaunch
        swingLaunchBlock.setLeaveModeLaunchFwd();
        swingLaunchBlock.selectFwdConditions();
        swingLaunchBlock.addConditionBlockFree(finalBrakeBlock);
        swingLaunchBlock.addConditionChangeSwitch(swingLaunchSwitch, 1, false);
    
    //FinalBrake
        finalBrakeBlock.setLeaveModeMoveFwd();
        finalBrakeBlock.selectFwdConditions();
        finalBrakeBlock.addConditionBlockFree(stationBlock);

        /*
    //Storage1
        storage1Block.selectBwdConditions();
        storage1Block.addConditionBlockFree(transferBoostBlock);
        storage1Block.addConditionChangeSwitch(forkSwitch, 0, false);

        storage1Block.selectFwdConditions();
        storage1Block.addConditionBlockFree(storage2Block);

    //Storage2
        storage2Block.selectBwdConditions();
        storage2Block.addConditionBlockFree(storage1Block);

        storage1Block.selectFwdConditions();
        storage1Block.addConditionBlockFree(storage3Block);

    //Storage3
        storage3Block.selectBwdConditions();
        storage3Block.addConditionBlockFree(storage2Block);
    */

        return true;
    }

    public void onNextFrame(float tick){
        blockHelperController.process();
    }
}
